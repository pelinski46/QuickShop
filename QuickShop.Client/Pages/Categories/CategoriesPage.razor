@inject HttpClient http

@if (categories is not null )
{
    <div class="card sticky-top" style="max-height:100%; overflow-y:scroll">
        <div class="card-header">Categorias</div>
        <div class="card-body">
            <div class="list-group">
                <button type="button" @onclick="DefaultCategoryClicked" class="list-group-item list-group-item-action @(CategoryId==0? "active": "")">
                    <i class="fa fa-object-group">Todos</i>
                </button>
                @foreach (var category in categories)
                {
                    <button @onclick="() => CategoryClicked(category.Id)" type="button" class="list-group-item list-group-item-action @(category.Id == CategoryId? "active": "")">
                        @category.Name!.ToUpper()
                    </button>
                }
            </div>
        </div>
    </div>
    
}


@code 
{
    public List<Category> categories { get; set; } = new();
    public int CategoryId { get; set; } = 0;
    [Parameter]
    public EventCallback DefaultCategoryClickedEvent { get; set; }
    [Parameter]
    public EventCallback<int> CategoryClickedEvent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await http.GetFromJsonAsync<List<Category>>("api/Categories");
    }

    public async Task CategoryClicked(int categoryId)
    {
        await CategoryClickedEvent.InvokeAsync(categoryId);
    }

    public async void DefaultCategoryClicked()
    {
        CategoryId = 0;
        await DefaultCategoryClickedEvent.InvokeAsync();
    }
}

<style>
    .card-header {
        height: 60px;
        text-align: center;
        padding: 10px;
        font-size: 26px;
    }
</style>