@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using QuickShop.Client.Authentication
@using QuickShop.Client.Services.CartService
@using QuickShop.Shared.Models
@inject HttpClient Http
@inject AuthenticationStateProvider authStateProvider
@inject ICartItemService CartItemService

@if (products is not null)
{
    <div class="container-fluid">
        <div class="row">
            @foreach (var product in products)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4" style="padding:10px;">
                    
                        <FluentCard>
                            <a href="@Details.Url(product)" style="text-decoration:none; color: inherit;">
                            <div class="set-bg">
                                <img src="@product.Image" class="img-fluid" />
                            </div>
                            </a>
                            <div class="p-3">
                                <h6 class="text-center">@product.Title</h6>
                                <h5 class="text-center">@($"{product.Price.ToString("C", new System.Globalization.CultureInfo("es-AR"))}")</h5>
                                <FluentStack HorizontalAlignment="HorizontalAlignment.Center">
                                    <button class="btn btn-primary">Comprar</button>
                                    <AuthorizeView>
                                        <Authorized>
                                        <button class="btn btn-primary" @onclick="async () => await AddItem(product.Id, context.User.Identity!.Name)">Carrito</button>
                                        </Authorized>
                                    </AuthorizeView>
                                    
                                </FluentStack>
                            </div>
                        </FluentCard>
                </div>
            }
        </div>
    </div>


}


@code {
    [Parameter] public List<Product>? products { get; set; } = new();
    

    

    private async Task AddItem(int productId, string userId)
    {
        
        if (userId != null)
        {
            var cartItem = new CartItem
                {
                    ProductId = productId,
                    UserId = userId,
                    Quantity = 1
                };

            await CartItemService.AddCartItem(cartItem, userId);
            // Handle response (e.g., show success message)
        }
        else
        {
            // Handle unauthenticated user case
        }
    }
}
<style>
    .set-bg img {
        width: 150%;
        height: 300px; /* Ensure all images are the same height */
        object-fit: cover; /* Cover the container without distortion */
        display: block;
    }
</style>