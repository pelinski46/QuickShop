@page "/products/details/{id:int}"
@using QuickShop.Shared.Models
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject IProductService ProductService

<PageTitle>Detalles del Producto</PageTitle>


<FluentStack Orientation="Orientation.Vertical">
    @if (product is null)
    {
        <FluentProgressRing Size="Large" />
    }
    else
    {
        <FluentStack Orientation="Orientation.Vertical">
            <h4>@product.Title</h4>
            <img src="@product.Image" width="200" height="300" class="img-fluid" style="object-fit: cover;" />
            <FluentTextArea Label="Descripción" Value="@product.Description" ReadOnly Style="background-color:transparent"/>
            <FluentTextField Label="Cantidad" Value="@product.quantity.ToString()" ReadOnly />
            <FluentTextField Label="Precio" Value="@product.Price.ToString("C", new System.Globalization.CultureInfo("es-AR"))" ReadOnly />
        </FluentStack>
    }
    <FluentButton Appearance="Appearance.Accent">Comprar</FluentButton>
    <FluentButton Appearance="Appearance.Accent">Agregar al Carrito</FluentButton>
</FluentStack>


@code {
    [Parameter]
    public int Id { get; set; }

    public static string Url(Product product) =>
            $"products/details/{Uri.EscapeDataString(product.Id.ToString())}";

    Product? product;



    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetProduct(Id);

        if (product is null)
        {
            navigationManager.NavigateTo("notfound");
        }
    }
}
