@page "/products"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IProductService ProductService
@using QuickShop.Shared.Models
@inject HttpClient Http

<PageTitle>Productos</PageTitle>

<h1>Productos</h1>

<p>
    <a href="products/create">Crear Nuevo Producto</a>
</p>

<QuickGrid Class="table" Items="@products" Pagination="pagination">
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="product => product.Title" Title="Nombre" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="product => product.Description" Title="Descripción" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="product => product.quantity" Title="Cantidad" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="product => product.Price" Title="Precio" />
    <Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn Context="product">
        <a href="@Edit.Url(product)">Editar</a> |
        <a href="@Details.Url(product)">Detalles</a> |
        <a href="@Delete.Url(product)">Eliminar</a>
    </Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn>
</QuickGrid>

<Paginator State="pagination" />

@code {
    IQueryable<Product>? products;
    protected override async Task OnInitializedAsync()
    {
        products = Queryable.AsQueryable(await ProductService.GetProducts());
    }
    Microsoft.AspNetCore.Components.QuickGrid.PaginationState pagination = new() { ItemsPerPage = 10 };
}